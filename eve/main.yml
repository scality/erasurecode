---
version: "0.2"

branches:
  user/*, feature/*, improvement/*, bugfix/*, w/*, q/*, hotfix/*:
    stage: pre-merge

models:
  - name: factorized blocks
  - Git: &git_pull_docker
      name: git pull
      repourl: "%(prop:git_reference)s"
      mode: full
      method: clobber
      shallow: false
      retryFetch: true
      haltOnFailure: true
  - ShellCommand: &git_clean
      name: "clean git repository"
      command: |
        set -xve
        git clean -dxf
      haltOnFailure: true
  - Upload: &upload_artifacts
      source: artifacts
      timeout: 3600
      alwaysRun: true
  - ShellCommand: &build_isal
      name: "Building ISAL"
      command: |
        set -xvue
        git clone --depth 1 --branch v2.28.0 https://github.com/intel/isa-l.git
        cd isa-l
        ./autogen.sh
        ./configure --prefix=/usr
        make
        sudo make install
        sudo ldconfig
      timeout: 300  # 5 minutes
  - ShellCommand: &build_liberasurecode
      name: "Building liberasurecode"
      command: |
        set -xvue
        git clone --depth 1 --branch afc38de https://github.com/scality/liberasurecode.git
        cd liberasurecode
        ./autogen.sh
        ./configure --prefix=/usr --with-pkgconfigdir=/usr/lib64/pkgconfig
        make
        sudo make install
        sudo ldconfig
      timeout: 300  # 5 minutes
  - ShellCommand: &get_deps
      name: "get dependencies"
      command: |
        set -xvue
        go get -v -t -d ./...
      timeout: 300  # 5 minutes
  - ShellCommand: &test
      name: "test & lint"
      command: |
        set -xvue
        go test -v .
        golangci-lint run --new-from-rev 983e1d15
      haltOnFailure: true
      timeout: 300  # 5 minutes
  - ShellCommand: &build
      name: "build"
      command: |
        set -xvue
        go build -v .
      haltOnFailure: true
      timeout: 300  # 5 minutes

stages:
  pre-merge:
    worker: &master-worker
      type: kube_pod
      path: eve/workers/worker.yml
      images:
        worker: eve/workers/master
    steps:
      - Git: *git_pull_docker
      - ShellCommand: *git_clean
      - TriggerStages:
          name: trigger compilation and test stages simultaneously
          stage_names:
            - centos7
          waitForFinish: true
          haltOnFailure: true
      #
      # Upload build status to artifacts
      #
      - ShellCommand:
          name: add successful .final_status to artifacts
          command: >
            mkdir build_status
            && echo -n "SUCCESSFUL" > build_status/.final_status
          haltOnFailure: true
      - ShellCommand:
          name: add failed .final_status to artifacts if needed
          command: >
            [ -f build_status/.final_status ]
            || ( mkdir build_status &&
                 echo -n "FAILED" > build_status/.final_status )
          haltOnFailure: true
          alwaysRun: true
      - Upload:
          urls:
            - ["artifacts", ""]
          source: build_status
          alwaysRun: true

  centos7:
    name: "compile erasurecode for Centos Core (7.x)"
    worker: &build_worker_c7
      type: kube_pod
      path: eve/workers/worker.yml
      images:
        worker: eve/workers/compile_centos_7
    steps:
      - SetProperty:
          property: os_name
          value: centos7
          hideStepIf: true
      - Git: *git_pull_docker
      - ShellCommand: *build_isal
      - ShellCommand: *build_liberasurecode
      - ShellCommand: *get_deps
      - ShellCommand: *test
      - ShellCommand: *build
